if (JST === undefined) {
    JST = {}
}

const workdir = '/srv'
const projectName = JST.getConfiguration('project.name')

const ELASTIC_VERSION = JST.getConfiguration('env.ELASTIC_VERSION')
const ELASTIC_PASSWORD = JST.getConfiguration('env.ELASTIC_PASSWORD')
const LOGSTASH_INTERNAL_PASSWORD = JST.getConfiguration('env.LOGSTASH_INTERNAL_PASSWORD')
const KIBANA_SYSTEM_PASSWORD = JST.getConfiguration('env.KIBANA_SYSTEM_PASSWORD')

const jstResult = {
    services: {
        setup:{
            buildImage: 'setup',
            buildArgs: {
                ELASTIC_VERSION: ELASTIC_VERSION
            },
            depends_on: [
                'elasticsearch',
            ],
            environment: {
                ELASTIC_PASSWORD: ELASTIC_PASSWORD,
                LOGSTASH_INTERNAL_PASSWORD: LOGSTASH_INTERNAL_PASSWORD,
                KIBANA_SYSTEM_PASSWORD: KIBANA_SYSTEM_PASSWORD,
            },
            volumes: [
                'setup:/state:Z'
            ],
        },
        elasticsearch: {
            buildImage: 'elasticsearch',
            buildArgs: {
                ELASTIC_VERSION: ELASTIC_VERSION
            },
            environment: {
                ES_JAVA_OPTS: '-Xms512m -Xmx512m',
                ELASTIC_PASSWORD: ELASTIC_PASSWORD,
                'discovery.type': 'single-node',
            },
            virtualHosts: [
                { port: 9200, domain: JST.buildDomain('elasticsearch'), name: 'elasticsearch' },
            ],
            volumes: [
                './.docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z',
                'elasticsearch:/usr/share/elasticsearch/data:z',
            ],
        },
        kibana: {
            buildImage: 'kibana',
            buildArgs: {
                ELASTIC_VERSION: ELASTIC_VERSION
            },
            depends_on: [
                'elasticsearch',
            ],
            environment: {
                KIBANA_SYSTEM_PASSWORD: KIBANA_SYSTEM_PASSWORD,
                KIBANA_FLEET_SETUP: '1',
            },
            virtualHosts: [
                { port: 5601, domain: JST.buildDomain('kibana'), name: 'kibana' },
            ],
            volumes: [
                './.docker/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z',
            ]
        },
        logstash: {
            buildImage: 'logstash',
            buildArgs: {
                ELASTIC_VERSION: ELASTIC_VERSION
            },
            depends_on: [
                'elasticsearch',
            ],
            environment: {
                LOGSTASH_INTERNAL_PASSWORD: LOGSTASH_INTERNAL_PASSWORD,
                LS_JAVA_OPTS: '-Xms256m -Xmx256m',
            },
            ports: [
                '5044:5044',
                '50000:50000/tcp',
                '50000:50000/udp',
            ],
            virtualHosts: [
                { port: 9600, domain: JST.buildDomain('logstash'), name: 'logstash' },
            ],
            volumes: [
                './.docker/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z',
                './.docker/logstash/pipeline:/usr/share/logstash/pipeline:ro,Z',
            ]
        }
    },
}

if(JST.getConfiguration('extension.fleet') === 'true'){
    jstResult.services['fleet-server'] = {
        buildImage: 'fleet',
        buildArgs: {
            ELASTIC_VERSION: ELASTIC_VERSION
        },
        depends_on: [
            'elasticsearch',
            'kibana',
        ],
        environment: {
            FLEET_SERVER_ENABLE: '1',
            FLEET_SERVER_INSECURE_HTTP: 'true',
            FLEET_SERVER_POLICY_ID: 'fleet-server-policy',
            KIBANA_FLEET_USERNAME: 'elastic',
            KIBANA_FLEET_PASSWORD: ELASTIC_PASSWORD,
        },
        hostname: 'fleet-server',
        restart: 'on-failure'
    }
}

if(JST.getConfiguration('extension.filebeat') === 'true'){
    jstResult.services['filebeat'] = {
        buildImage: 'filebeat',
        buildArgs: {
            ELASTIC_VERSION: ELASTIC_VERSION,
        },
        user: 'root',
        command: ['-e', '--strict.perms=false'],
        depends_on: [
            'elasticsearch',
        ],
        environment: {
            ELASTIC_PASSWORD: ELASTIC_PASSWORD,
        },
        volumes: [
            './.docker/filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro,Z',
            '/var/lib/docker/containers:/var/lib/docker/containers:ro,Z',
            '/var/run/docker.sock:/var/run/docker.sock:ro,Z',
        ]
    }
}

jstResult